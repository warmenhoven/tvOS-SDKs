// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.7.24 clang-1600.0.25.1)
// swift-module-flags: -target arm64e-apple-tvos18.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-bare-slash-regex -user-module-version 1967.10.4.3.1 -module-name DeviceDiscoveryUI
import Combine
import DeveloperToolsSupport
@_exported import DeviceDiscoveryUI
import Foundation
import Network
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
prefix operator >>
@objc public protocol PreviewImageFrameReporting {
  @objc func didUpdateImageViewFrame(_ viewFrame: CoreFoundation.CGRect)
  @objc func didUpdateImageContentFrame(_ contentFrame: CoreFoundation.CGRect)
}
@available(tvOS 16.0, *)
extension DeviceDiscoveryUI.DDDevicePickerViewController {
  @available(tvOS 16.0, *)
  @_Concurrency.MainActor @preconcurrency public static func isSupported(_ browseDescriptor: Network.NWBrowser.Descriptor, using: Network.NWParameters? = nil) -> Swift.Bool
  @available(tvOS 16.0, *)
  @_Concurrency.MainActor @preconcurrency convenience public init?(browseDescriptor: Network.NWBrowser.Descriptor, parameters: Network.NWParameters? = nil)
  @available(tvOS 16.0, *)
  @_Concurrency.MainActor @preconcurrency public var endpoint: Network.NWEndpoint {
    get async throws
  }
}
